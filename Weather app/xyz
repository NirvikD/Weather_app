Cloud cover 
Temperature, 
Feels like 
Humidity 
Min temp
Max temp 
Wind Speed
Wind_Degrees
Sunrise 
Sunset

  cloud_pct.innerHTML = response.cloud_pct
  temp.innerHTML = response.temp
  feels_like.innerHTML = response.feels_like
  humidity.innerHTML = response.humidity
  min_temp.innerHTML = response.min_temp
  max_temp.innerHTML = response.max_temp
  wind_speed.innerHTML = response.wind_speed
  wind_degrees.innerHTML = response.wind_degrees
  sunrise.innerHTML = response.sunrise
  sunset.innerHTML = response.sunset




  const options = {
    method: 'GET',
    headers: {
        'X-RapidAPI-Key': '07ce1efb32msh86389addcc88be4p167d92jsn545fce1f69de',
        'X-RapidAPI-Host': 'weather-by-api-ninjas.p.rapidapi.com'
    }
};

const options = {
  method: 'GET',
  headers: {
      'X-RapidAPI-Key': '07ce1efb32msh86389addcc88be4p167d92jsn545fce1f69de',
      'X-RapidAPI-Host': 'weather-by-api-ninjas.p.rapidapi.com'
  }
};

const cities = [
  { name: "Shanghai", cellId: "shanghai" },
  { name: "New York", cellId: "new-york" },
  // Add more cities here as needed
];

const populateWeatherTable = async () => {
  try {
      const responses = await Promise.all(cities.map(city => 
          fetch('https://weather-by-api-ninjas.p.rapidapi.com/v1/weather?city=' + city.name, options)
      ));
      
      const data = await Promise.all(responses.map(response => response.json()));

      data.forEach((response, index) => {
          const cell = document.getElementById(cities[index].cellId);
          cell.innerHTML = `
              <td>${cities[index].name}</td>
              <td>${response.temp}</td>
              <td>${response.wind_speed}</td>
              <td>${response.humidity}</td>
              <td>${response.cloud_pct}</td>
          `;
      });
  } catch (error) {
      console.error(error);
      // Handle error for invalid city input if needed
  }
};

// Call the function to populate the weather table
populateWeatherTable();
